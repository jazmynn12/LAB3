#include <iostream>
#include "currency.cpp"
#include "LinkNode.cpp"
#include <stdexcept>
 #include <sstream>

class DoubleLinkedList {
   private: 
   int count; 
   Node* start; 
   Node* end; 
   
   public:
    DoubleLinkedList() : count(0), start(nullptr), end(nullptr) {} 
    void addCurrency(Currency* currency, int index) {
        if (index < 0 || index > count) { 
        std::cerr << "Index out of bounds" << std::endl; 
        return; 
        } 
        Node* newNode = new Node(currency); 
        if (index == 0) { 
            newNode->next = start; 
            if (start != nullptr) { 
                start->prev = newNode; 
            } start = newNode; 
            if (end == nullptr) { 
                end = newNode; 
            } 
        } else if (index == count) { 
            newNode->prev = end; 
            if (end != nullptr) { 
                end->next = newNode; 
            } 
            end = newNode; 
            if (start == nullptr) { 
                start = newNode; 
            } 
        } else { 
            Node* temp = start; 
            for (int i = 0; i < index - 1; ++i) { 
                temp = temp->next; 
            } 
            newNode->next = temp->next; 
            newNode->prev = temp; 
            temp->next->prev = newNode; 
            temp->next = newNode;
            } count++; 
        } 
        
            
                
                Currency* getCurrency(int index) { 
                    if (index < 0 || index >= count) { 
                        std::cerr << "Index out of bounds" << std::endl; 
                        return nullptr; 
                    } 
                
                    Node* temp = start; 
                    for (int i = 0; i < index; ++i) { 
                        temp = temp->next; 
                    } 
                    return temp->data; 
                } 
                
               
};
